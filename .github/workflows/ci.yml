name: Node CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NODE_VERSION: [16.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Use Node.js ${{ matrix.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.NODE_VERSION }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci
  
  build:
    runs-on: ubuntu-latest
    needs: install
    strategy:
      matrix:
        NODE_VERSION: [16.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Use Node.js ${{ matrix.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.NODE_VERSION }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm run build

  lint:
    runs-on: ubuntu-latest
    needs: install
    strategy:
      matrix:
        NODE_VERSION: [16.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      id: cache
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Use Node.js ${{ matrix.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.NODE_VERSION }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Lint
      run: npm run lint