name: Release & Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NODE_VERSION: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Use Node.js ${{ matrix.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.NODE_VERSION }}

      - name: Install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

  release:
    runs-on: ubuntu-latest
    needs: install
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Use Node.js ${{ matrix.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.NODE_VERSION }}

      - name: Install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Release
        env:
          VERSION: ${{ github.ref }}
        run: |
          gh release create v$(echo $VERSION) --title "v$(echo $VERSION)" --generate-notes
  
  publish:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Use Node.js ${{ matrix.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.NODE_VERSION }}

      - name: Install
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build package
        run: npm run build:all

      - name: Publish package
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
          npm publish